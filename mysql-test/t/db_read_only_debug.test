--source include/have_debug.inc
--source include/have_debug_sync.inc

#
# Check that locking is correct to ensure that transactions cannot finish
# committing after DB read only was set.
#

create database test2;
use test2;

create table t (i int);
select * from t;

connect (con1,localhost,root,,test);
show create database test2;
use test2;
SET DEBUG_SYNC='ha_commit_trans_after_check_db_readonly SIGNAL parked WAIT_FOR go';
--send insert into t values (1);

connect (con2,localhost,root,,test);
SET DEBUG_SYNC='now WAIT_FOR parked';
--send alter database test2 super_read_only = true;

connection default;
let $wait_condition= SELECT count(*) = 1 FROM INFORMATION_SCHEMA.PROCESSLIST where STATE = 'Waiting for table metadata lock' AND ID != CONNECTION_ID();
--source include/wait_condition.inc
SET DEBUG_SYNC='now SIGNAL go';

connection con1;
# The insert must succeed
--reap
select * from t;

connection con2;
# The alter also succeeds, after the insert finishes
--reap

show create database test2;

alter database test2 read_only = false;
drop database test2;
