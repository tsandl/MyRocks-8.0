--source include/have_rocksdb.inc

let $engine=rocksdb;
--source include/gap_lock_raise_error_all.inc

create user 'abcd'@'%' identified by 'pw';
grant all on t.* to 'abcd'@'%';
drop user 'abcd'@'%';

SET @save_gap_lock_exceptions = @@global.gap_lock_exceptions;

SET GLOBAL gap_lock_exceptions="t.*";
--source include/gap_lock_raise_error_init.inc

set session autocommit=0;
--error ER_UNKNOWN_ERROR
select * from gap1 limit 1 for update;
--error ER_UNKNOWN_ERROR
select * from gap1 where value != 100 limit 1 for update;

--source include/gap_lock_raise_error_cleanup.inc

SET GLOBAL gap_lock_exceptions="gap.*";
--source include/gap_lock_raise_error_init.inc

set session autocommit=0;
select * from gap1 limit 1 for update;
select * from gap1 where value != 100 limit 1 for update;

--source include/gap_lock_raise_error_cleanup.inc

# Reset Slave All tries to acquire gap locks on system tables
# which must succeed..
--source include/gap_lock_raise_error_init.inc

SET SESSION autocommit = 0;
RESET SLAVE ALL;

--source include/gap_lock_raise_error_cleanup.inc

# Make sure we handle invalid regex expressions and generate a warning
--exec echo "" >$MYSQLTEST_VARDIR/log/mysqld.1.err
SET GLOBAL gap_lock_exceptions="[a-b,abc\\";
--exec grep -o "Invalid pattern .*$" $MYSQLTEST_VARDIR/log/mysqld.1.err | tail -n 1

SET GLOBAL gap_lock_exceptions=@save_gap_lock_exceptions;
