#
# Normal Case
#
set global innodb_limit_optimistic_insert_debug = 2;
CREATE TABLE t1 (a INT);
INSERT INTO t1 VALUES (10), (20), (30), (40), (50), (60), (70), (80), (90),
(100);
SELECT COUNT(*) FROM t1;
COUNT(*)
10
CHECK TABLE t1;
Table	Op	Msg_type	Msg_text
test.t1	check	status	OK
DROP TABLE t1;
set global innodb_limit_optimistic_insert_debug = 0;
#
# SELECT COUNTER: Error test case where read ahead queue is full and others is killing it 
#
set global innodb_limit_optimistic_insert_debug = 2;
CREATE TABLE t1 (a INT);
INSERT INTO t1 VALUES (1), (2), (3), (4), (5), (6), (7), (8), (9);
CREATE TABLE t2 (a INT);
INSERT Into t2 SELECT A.a + B.a * 10 + C.a * 100 + D.a * 1000 FROM t1 A, t1 B, t1 C, t1 D;
set global debug='+d,simulate_queue_is_full';
SELECT COUNT(*) FROM t2;
SELECT ID FROM INFORMATION_SCHEMA.PROCESSLIST WHERE 
INFO = 'SELECT COUNT(*) FROM t2' INTO @thread_id;
KILL QUERY @thread_id;
ERROR 70100: Query execution was interrupted
SELECT count(*) FROM information_schema.processlist WHERE info = 'SELECT COUNT(*) FROM t2';
count(*)
0
DROP TABLE t1;
DROP TABLE t2;
set global debug='-d,simulate_queue_is_full';
set global innodb_limit_optimistic_insert_debug = 0;
